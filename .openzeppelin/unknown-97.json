{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x87DB4171BeCC29C3609EBadCc95a134B06C09d9D",
    "txHash": "0x17712b9318cebdbab3ebcc862f0af09d331f6736175693289b92530e7a673baf"
  },
  "proxies": [
    {
      "address": "0xEa3B879038b8f5d541F99647E2203cD27Dbc4D29",
      "txHash": "0xac242fbff9a0897ebba7dc05e4196569d09d0cec7fcebd0287ca85964f546cfe",
      "kind": "transparent"
    },
    {
      "address": "0xc797Fc6246Cd78efAe19585F70B9aDf23E0609D4",
      "txHash": "0x3cd610a775ef08fcff9195f95a5139af29c877db36edab214dfc261647002312",
      "kind": "transparent"
    },
    {
      "address": "0xAC7Ba80b60d679e9D271030aBd5D40334F142bE6",
      "txHash": "0xf59be442d92731935d1fe571d0444088c5c692955309384516e424ddd023a04a",
      "kind": "transparent"
    },
    {
      "address": "0x95baA8Bb17AC95bf5798A428b2141884C78E1424",
      "txHash": "0xab8663bf45d713806e688cc5e24510ce03a6cdc5ea9eb000c47f33128c8b7980",
      "kind": "transparent"
    },
    {
      "address": "0xfbACcc6e0201e290E1E1E8A6c45D8011E8c74945",
      "txHash": "0x7ac3a154da897d18af5416c33a1172a38b979c895329c697dfbd6cfdd76bc146",
      "kind": "transparent"
    },
    {
      "address": "0x516885034C17D16A963703D29A0440E5D8bB9B35",
      "txHash": "0x525f3a84da4ad7740de1a266a62ad224ce8c167cf8c786a41c26272fce39e37c",
      "kind": "transparent"
    },
    {
      "address": "0xe507c542Cd9C32a73A3cAc700cb474DB876B0d29",
      "txHash": "0xab53a0a11dae7450c74d77e98ba285118381b5ae50a0856d794d0cba7d325aba",
      "kind": "transparent"
    },
    {
      "address": "0x03b5AaDC85ef3c4E83Cab4a2C0A32140438953eA",
      "txHash": "0xc82710db1794a96e008709f816fe5c462f3234bb314f4683757e974c77fc1902",
      "kind": "transparent"
    }
  ],
  "impls": {
    "b9152ec5a605e775a506fc92ec43878a84ff65f71d0efd081cf0c7ef8ee41515": {
      "address": "0x9a87Af35D5BA5682a710BE04E2C8a6B43eF6b8fd",
      "txHash": "0x57d601fcbecf67cab1ce82a69d001ac1a9749c63189fa0847c1bc27952e77fd6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC20PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20PausableUpgradeable.sol:37"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "xBlade",
            "label": "tokenBlacklist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "xBlade.sol:12"
          },
          {
            "contract": "xBlade",
            "label": "_sellAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "xBlade.sol:13"
          },
          {
            "contract": "xBlade",
            "label": "_exceptionAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "xBlade.sol:14"
          },
          {
            "contract": "xBlade",
            "label": "_nextClaimTime",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "xBlade.sol:15"
          },
          {
            "contract": "xBlade",
            "label": "canClaim",
            "type": "t_bool",
            "src": "xBlade.sol:17"
          },
          {
            "contract": "xBlade",
            "label": "sellFeeRate",
            "type": "t_uint256",
            "src": "xBlade.sol:18"
          },
          {
            "contract": "xBlade",
            "label": "feeAddress",
            "type": "t_address",
            "src": "xBlade.sol:19"
          },
          {
            "contract": "xBlade",
            "label": "rewardCycleBlock",
            "type": "t_uint256",
            "src": "xBlade.sol:20"
          },
          {
            "contract": "xBlade",
            "label": "threshHoldTopUpRate",
            "type": "t_uint256",
            "src": "xBlade.sol:21"
          },
          {
            "contract": "xBlade",
            "label": "stakerAddress",
            "type": "t_address",
            "src": "xBlade.sol:22"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "cfac2d546b5dfd07b64a6c3ff146c96cc4cf3224bc8f8644262f4390079c3600": {
      "address": "0xD47b9FAFeB82D22B1E2FD07A82d7bB7A4eF9445E",
      "txHash": "0xca78ca4220d0eec16dc7c4ae770721e52622766d3981087bf937443a8658945e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)20051_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "BasicPriceOracle",
            "label": "priceSet",
            "type": "t_bool",
            "src": "BasicPriceOracle.sol:10"
          },
          {
            "contract": "BasicPriceOracle",
            "label": "currentPrice_",
            "type": "t_uint256",
            "src": "BasicPriceOracle.sol:11"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)20051_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)20051_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)23919_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)23919_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)23654_storage"
              }
            ]
          },
          "t_struct(Set)23654_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f98d780fba90056e4dbda99158adabe0301bcdb7d530edbc0a06c008fbb83e39": {
      "address": "0xA56479B561C6372b1110E36e5d785Bf396fd9866",
      "txHash": "0x7f55e771cd9154a8646f58a677a8b26423f3c658bad9653626c8885c2ec10075",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)20117_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "CryptoWars",
            "label": "characters",
            "type": "t_contract(Characters)9698",
            "src": "CryptoWars.sol:39"
          },
          {
            "contract": "CryptoWars",
            "label": "weapons",
            "type": "t_contract(Weapons)18751",
            "src": "CryptoWars.sol:40"
          },
          {
            "contract": "CryptoWars",
            "label": "xBlade",
            "type": "t_contract(IERC20)25991",
            "src": "CryptoWars.sol:41"
          },
          {
            "contract": "CryptoWars",
            "label": "randoms",
            "type": "t_contract(IRandoms)10435",
            "src": "CryptoWars.sol:42"
          },
          {
            "contract": "CryptoWars",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)10399",
            "src": "CryptoWars.sol:43"
          },
          {
            "contract": "CryptoWars",
            "label": "minimumFightTax",
            "type": "t_uint256",
            "src": "CryptoWars.sol:44"
          },
          {
            "contract": "CryptoWars",
            "label": "supportFeeRate",
            "type": "t_int128",
            "src": "CryptoWars.sol:45"
          },
          {
            "contract": "CryptoWars",
            "label": "staminaCostFight",
            "type": "t_uint8",
            "src": "CryptoWars.sol:116"
          },
          {
            "contract": "CryptoWars",
            "label": "mintCharacterFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:119"
          },
          {
            "contract": "CryptoWars",
            "label": "refillStaminaFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:122"
          },
          {
            "contract": "CryptoWars",
            "label": "fightRewardBaseline",
            "type": "t_int128",
            "src": "CryptoWars.sol:125"
          },
          {
            "contract": "CryptoWars",
            "label": "mintWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:128"
          },
          {
            "contract": "CryptoWars",
            "label": "reforgeWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:129"
          },
          {
            "contract": "CryptoWars",
            "label": "nonce",
            "type": "t_uint256",
            "src": "CryptoWars.sol:131"
          },
          {
            "contract": "CryptoWars",
            "label": "lastBlockNumberCalled",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:133"
          },
          {
            "contract": "CryptoWars",
            "label": "fightXpGain",
            "type": "t_uint256",
            "src": "CryptoWars.sol:135"
          },
          {
            "contract": "CryptoWars",
            "label": "tokenRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:137"
          },
          {
            "contract": "CryptoWars",
            "label": "xpRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "CryptoWars.sol:138"
          },
          {
            "contract": "CryptoWars",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "CryptoWars.sol:140"
          },
          {
            "contract": "CryptoWars",
            "label": "fightTraitBonus",
            "type": "t_int128",
            "src": "CryptoWars.sol:141"
          },
          {
            "contract": "CryptoWars",
            "label": "inGameOnlyFunds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:143"
          },
          {
            "contract": "CryptoWars",
            "label": "totalInGameOnlyFunds",
            "type": "t_uint256",
            "src": "CryptoWars.sol:144"
          },
          {
            "contract": "CryptoWars",
            "label": "promos",
            "type": "t_contract(Promos)7829",
            "src": "CryptoWars.sol:146"
          },
          {
            "contract": "CryptoWars",
            "label": "_rewardsClaimTaxTimerStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:148"
          },
          {
            "contract": "CryptoWars",
            "label": "stakeFromGameImpl",
            "type": "t_contract(IStakeFromGame)10445",
            "src": "CryptoWars.sol:150"
          },
          {
            "contract": "CryptoWars",
            "label": "durabilityCostFight",
            "type": "t_uint8",
            "src": "CryptoWars.sol:152"
          },
          {
            "contract": "CryptoWars",
            "label": "burnWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:154"
          },
          {
            "contract": "CryptoWars",
            "label": "reforgeWeaponWithDustFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:155"
          },
          {
            "contract": "CryptoWars",
            "label": "BUSDAddress",
            "type": "t_address",
            "src": "CryptoWars.sol:158"
          }
        ],
        "types": {
          "t_contract(Characters)9698": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)18751": {
            "label": "contract Weapons"
          },
          "t_contract(IERC20)25991": {
            "label": "contract IERC20"
          },
          "t_contract(IRandoms)10435": {
            "label": "contract IRandoms"
          },
          "t_contract(IPancakeRouter02)10399": {
            "label": "contract IPancakeRouter02"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)7829": {
            "label": "contract Promos"
          },
          "t_contract(IStakeFromGame)10445": {
            "label": "contract IStakeFromGame"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)20117_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)20117_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)23985_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)23985_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)23720_storage"
              }
            ]
          },
          "t_struct(Set)23720_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1e43ef3af5a85f45538e0b37f56fc5242375c71a00dce9ffd55a3da2d2f9d6a3": {
      "address": "0x24D5b19Ac0666534E45BebAE19e48aD268877c87",
      "txHash": "0xa735e3d6d57c89d0def957d1e3359f05f4be55a44d79ffe08699334b9ce8aeca",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)20117_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "CryptoWars",
            "label": "characters",
            "type": "t_contract(Characters)9698",
            "src": "CryptoWars.sol:39"
          },
          {
            "contract": "CryptoWars",
            "label": "weapons",
            "type": "t_contract(Weapons)18751",
            "src": "CryptoWars.sol:40"
          },
          {
            "contract": "CryptoWars",
            "label": "xBlade",
            "type": "t_contract(IERC20)25991",
            "src": "CryptoWars.sol:41"
          },
          {
            "contract": "CryptoWars",
            "label": "randoms",
            "type": "t_contract(IRandoms)10435",
            "src": "CryptoWars.sol:42"
          },
          {
            "contract": "CryptoWars",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)10399",
            "src": "CryptoWars.sol:43"
          },
          {
            "contract": "CryptoWars",
            "label": "minimumFightTax",
            "type": "t_uint256",
            "src": "CryptoWars.sol:44"
          },
          {
            "contract": "CryptoWars",
            "label": "supportFeeRate",
            "type": "t_int128",
            "src": "CryptoWars.sol:45"
          },
          {
            "contract": "CryptoWars",
            "label": "staminaCostFight",
            "type": "t_uint8",
            "src": "CryptoWars.sol:116"
          },
          {
            "contract": "CryptoWars",
            "label": "mintCharacterFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:119"
          },
          {
            "contract": "CryptoWars",
            "label": "refillStaminaFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:122"
          },
          {
            "contract": "CryptoWars",
            "label": "fightRewardBaseline",
            "type": "t_int128",
            "src": "CryptoWars.sol:125"
          },
          {
            "contract": "CryptoWars",
            "label": "mintWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:128"
          },
          {
            "contract": "CryptoWars",
            "label": "reforgeWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:129"
          },
          {
            "contract": "CryptoWars",
            "label": "nonce",
            "type": "t_uint256",
            "src": "CryptoWars.sol:131"
          },
          {
            "contract": "CryptoWars",
            "label": "lastBlockNumberCalled",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:133"
          },
          {
            "contract": "CryptoWars",
            "label": "fightXpGain",
            "type": "t_uint256",
            "src": "CryptoWars.sol:135"
          },
          {
            "contract": "CryptoWars",
            "label": "tokenRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:137"
          },
          {
            "contract": "CryptoWars",
            "label": "xpRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "CryptoWars.sol:138"
          },
          {
            "contract": "CryptoWars",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "CryptoWars.sol:140"
          },
          {
            "contract": "CryptoWars",
            "label": "fightTraitBonus",
            "type": "t_int128",
            "src": "CryptoWars.sol:141"
          },
          {
            "contract": "CryptoWars",
            "label": "inGameOnlyFunds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:143"
          },
          {
            "contract": "CryptoWars",
            "label": "totalInGameOnlyFunds",
            "type": "t_uint256",
            "src": "CryptoWars.sol:144"
          },
          {
            "contract": "CryptoWars",
            "label": "promos",
            "type": "t_contract(Promos)7829",
            "src": "CryptoWars.sol:146"
          },
          {
            "contract": "CryptoWars",
            "label": "_rewardsClaimTaxTimerStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:148"
          },
          {
            "contract": "CryptoWars",
            "label": "stakeFromGameImpl",
            "type": "t_contract(IStakeFromGame)10445",
            "src": "CryptoWars.sol:150"
          },
          {
            "contract": "CryptoWars",
            "label": "durabilityCostFight",
            "type": "t_uint8",
            "src": "CryptoWars.sol:152"
          },
          {
            "contract": "CryptoWars",
            "label": "burnWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:154"
          },
          {
            "contract": "CryptoWars",
            "label": "reforgeWeaponWithDustFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:155"
          },
          {
            "contract": "CryptoWars",
            "label": "BUSDAddress",
            "type": "t_address",
            "src": "CryptoWars.sol:158"
          }
        ],
        "types": {
          "t_contract(Characters)9698": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)18751": {
            "label": "contract Weapons"
          },
          "t_contract(IERC20)25991": {
            "label": "contract IERC20"
          },
          "t_contract(IRandoms)10435": {
            "label": "contract IRandoms"
          },
          "t_contract(IPancakeRouter02)10399": {
            "label": "contract IPancakeRouter02"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)7829": {
            "label": "contract Promos"
          },
          "t_contract(IStakeFromGame)10445": {
            "label": "contract IStakeFromGame"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)20117_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)20117_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)23985_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)23985_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)23720_storage"
              }
            ]
          },
          "t_struct(Set)23720_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "11157e7b61d4eef04921a8bd8771c09cec9700a323639020eab0319835ac13b8": {
      "address": "0x0a4e8B0A533CdC540Bedee3942fb6f60162Ef5FF",
      "txHash": "0x3b3643de7534764b8f56657576b5853cc8abe49df388446bd13836f96ce5a78b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)20117_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "CryptoWars",
            "label": "characters",
            "type": "t_contract(Characters)9698",
            "src": "CryptoWars.sol:39"
          },
          {
            "contract": "CryptoWars",
            "label": "weapons",
            "type": "t_contract(Weapons)18751",
            "src": "CryptoWars.sol:40"
          },
          {
            "contract": "CryptoWars",
            "label": "xBlade",
            "type": "t_contract(IERC20)25991",
            "src": "CryptoWars.sol:41"
          },
          {
            "contract": "CryptoWars",
            "label": "randoms",
            "type": "t_contract(IRandoms)10435",
            "src": "CryptoWars.sol:42"
          },
          {
            "contract": "CryptoWars",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)10399",
            "src": "CryptoWars.sol:43"
          },
          {
            "contract": "CryptoWars",
            "label": "minimumFightTax",
            "type": "t_uint256",
            "src": "CryptoWars.sol:44"
          },
          {
            "contract": "CryptoWars",
            "label": "supportFeeRate",
            "type": "t_int128",
            "src": "CryptoWars.sol:45"
          },
          {
            "contract": "CryptoWars",
            "label": "staminaCostFight",
            "type": "t_uint8",
            "src": "CryptoWars.sol:116"
          },
          {
            "contract": "CryptoWars",
            "label": "mintCharacterFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:119"
          },
          {
            "contract": "CryptoWars",
            "label": "refillStaminaFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:122"
          },
          {
            "contract": "CryptoWars",
            "label": "fightRewardBaseline",
            "type": "t_int128",
            "src": "CryptoWars.sol:125"
          },
          {
            "contract": "CryptoWars",
            "label": "mintWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:128"
          },
          {
            "contract": "CryptoWars",
            "label": "reforgeWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:129"
          },
          {
            "contract": "CryptoWars",
            "label": "nonce",
            "type": "t_uint256",
            "src": "CryptoWars.sol:131"
          },
          {
            "contract": "CryptoWars",
            "label": "lastBlockNumberCalled",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:133"
          },
          {
            "contract": "CryptoWars",
            "label": "fightXpGain",
            "type": "t_uint256",
            "src": "CryptoWars.sol:135"
          },
          {
            "contract": "CryptoWars",
            "label": "tokenRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:137"
          },
          {
            "contract": "CryptoWars",
            "label": "xpRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "CryptoWars.sol:138"
          },
          {
            "contract": "CryptoWars",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "CryptoWars.sol:140"
          },
          {
            "contract": "CryptoWars",
            "label": "fightTraitBonus",
            "type": "t_int128",
            "src": "CryptoWars.sol:141"
          },
          {
            "contract": "CryptoWars",
            "label": "inGameOnlyFunds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:143"
          },
          {
            "contract": "CryptoWars",
            "label": "totalInGameOnlyFunds",
            "type": "t_uint256",
            "src": "CryptoWars.sol:144"
          },
          {
            "contract": "CryptoWars",
            "label": "promos",
            "type": "t_contract(Promos)7829",
            "src": "CryptoWars.sol:146"
          },
          {
            "contract": "CryptoWars",
            "label": "_rewardsClaimTaxTimerStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:148"
          },
          {
            "contract": "CryptoWars",
            "label": "stakeFromGameImpl",
            "type": "t_contract(IStakeFromGame)10445",
            "src": "CryptoWars.sol:150"
          },
          {
            "contract": "CryptoWars",
            "label": "durabilityCostFight",
            "type": "t_uint8",
            "src": "CryptoWars.sol:152"
          },
          {
            "contract": "CryptoWars",
            "label": "burnWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:154"
          },
          {
            "contract": "CryptoWars",
            "label": "reforgeWeaponWithDustFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:155"
          },
          {
            "contract": "CryptoWars",
            "label": "BUSDAddress",
            "type": "t_address",
            "src": "CryptoWars.sol:158"
          }
        ],
        "types": {
          "t_contract(Characters)9698": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)18751": {
            "label": "contract Weapons"
          },
          "t_contract(IERC20)25991": {
            "label": "contract IERC20"
          },
          "t_contract(IRandoms)10435": {
            "label": "contract IRandoms"
          },
          "t_contract(IPancakeRouter02)10399": {
            "label": "contract IPancakeRouter02"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)7829": {
            "label": "contract Promos"
          },
          "t_contract(IStakeFromGame)10445": {
            "label": "contract IStakeFromGame"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)20117_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)20117_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)23985_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)23985_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)23720_storage"
              }
            ]
          },
          "t_struct(Set)23720_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e2eaee3f0e0028dea86eb700224e76f25abc74e76a63304e3fa1ae0c71aea29a": {
      "address": "0xa824595752835f345C0B06a3Ffc75fBFCA7c40C0",
      "txHash": "0x383118efbbf38b02e300a0927cd9a0306d45451a55eb1f2afae074df10f65115",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)20117_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "CryptoWars",
            "label": "characters",
            "type": "t_contract(Characters)9698",
            "src": "CryptoWars.sol:39"
          },
          {
            "contract": "CryptoWars",
            "label": "weapons",
            "type": "t_contract(Weapons)18751",
            "src": "CryptoWars.sol:40"
          },
          {
            "contract": "CryptoWars",
            "label": "xBlade",
            "type": "t_contract(IERC20)25991",
            "src": "CryptoWars.sol:41"
          },
          {
            "contract": "CryptoWars",
            "label": "randoms",
            "type": "t_contract(IRandoms)10435",
            "src": "CryptoWars.sol:42"
          },
          {
            "contract": "CryptoWars",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)10399",
            "src": "CryptoWars.sol:43"
          },
          {
            "contract": "CryptoWars",
            "label": "minimumFightTax",
            "type": "t_uint256",
            "src": "CryptoWars.sol:44"
          },
          {
            "contract": "CryptoWars",
            "label": "supportFeeRate",
            "type": "t_int128",
            "src": "CryptoWars.sol:45"
          },
          {
            "contract": "CryptoWars",
            "label": "staminaCostFight",
            "type": "t_uint8",
            "src": "CryptoWars.sol:116"
          },
          {
            "contract": "CryptoWars",
            "label": "mintCharacterFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:119"
          },
          {
            "contract": "CryptoWars",
            "label": "refillStaminaFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:122"
          },
          {
            "contract": "CryptoWars",
            "label": "fightRewardBaseline",
            "type": "t_int128",
            "src": "CryptoWars.sol:125"
          },
          {
            "contract": "CryptoWars",
            "label": "mintWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:128"
          },
          {
            "contract": "CryptoWars",
            "label": "reforgeWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:129"
          },
          {
            "contract": "CryptoWars",
            "label": "nonce",
            "type": "t_uint256",
            "src": "CryptoWars.sol:131"
          },
          {
            "contract": "CryptoWars",
            "label": "lastBlockNumberCalled",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:133"
          },
          {
            "contract": "CryptoWars",
            "label": "fightXpGain",
            "type": "t_uint256",
            "src": "CryptoWars.sol:135"
          },
          {
            "contract": "CryptoWars",
            "label": "tokenRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:137"
          },
          {
            "contract": "CryptoWars",
            "label": "xpRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "CryptoWars.sol:138"
          },
          {
            "contract": "CryptoWars",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "CryptoWars.sol:140"
          },
          {
            "contract": "CryptoWars",
            "label": "fightTraitBonus",
            "type": "t_int128",
            "src": "CryptoWars.sol:141"
          },
          {
            "contract": "CryptoWars",
            "label": "inGameOnlyFunds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:143"
          },
          {
            "contract": "CryptoWars",
            "label": "totalInGameOnlyFunds",
            "type": "t_uint256",
            "src": "CryptoWars.sol:144"
          },
          {
            "contract": "CryptoWars",
            "label": "promos",
            "type": "t_contract(Promos)7829",
            "src": "CryptoWars.sol:146"
          },
          {
            "contract": "CryptoWars",
            "label": "_rewardsClaimTaxTimerStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:148"
          },
          {
            "contract": "CryptoWars",
            "label": "stakeFromGameImpl",
            "type": "t_contract(IStakeFromGame)10445",
            "src": "CryptoWars.sol:150"
          },
          {
            "contract": "CryptoWars",
            "label": "durabilityCostFight",
            "type": "t_uint8",
            "src": "CryptoWars.sol:152"
          },
          {
            "contract": "CryptoWars",
            "label": "burnWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:154"
          },
          {
            "contract": "CryptoWars",
            "label": "reforgeWeaponWithDustFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:155"
          },
          {
            "contract": "CryptoWars",
            "label": "BUSDAddress",
            "type": "t_address",
            "src": "CryptoWars.sol:158"
          }
        ],
        "types": {
          "t_contract(Characters)9698": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)18751": {
            "label": "contract Weapons"
          },
          "t_contract(IERC20)25991": {
            "label": "contract IERC20"
          },
          "t_contract(IRandoms)10435": {
            "label": "contract IRandoms"
          },
          "t_contract(IPancakeRouter02)10399": {
            "label": "contract IPancakeRouter02"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)7829": {
            "label": "contract Promos"
          },
          "t_contract(IStakeFromGame)10445": {
            "label": "contract IStakeFromGame"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)20117_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)20117_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)23985_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)23985_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)23720_storage"
              }
            ]
          },
          "t_struct(Set)23720_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "976ec773e1a2c847f0e6c47138ba1fdbc88004f43ecee24a7352c6eaf07aec34": {
      "address": "0xc4891959957bA4cC8Bc7C2D3f3044212087EFf1e",
      "txHash": "0x73b9a0010d0af257830b0f6fe8152377ec04ce75e0539677aed5eaa499337b9a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)20117_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "CryptoWars",
            "label": "characters",
            "type": "t_contract(Characters)9698",
            "src": "CryptoWars.sol:39"
          },
          {
            "contract": "CryptoWars",
            "label": "weapons",
            "type": "t_contract(Weapons)18751",
            "src": "CryptoWars.sol:40"
          },
          {
            "contract": "CryptoWars",
            "label": "xBlade",
            "type": "t_contract(IERC20)25991",
            "src": "CryptoWars.sol:41"
          },
          {
            "contract": "CryptoWars",
            "label": "randoms",
            "type": "t_contract(IRandoms)10435",
            "src": "CryptoWars.sol:42"
          },
          {
            "contract": "CryptoWars",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)10399",
            "src": "CryptoWars.sol:43"
          },
          {
            "contract": "CryptoWars",
            "label": "minimumFightTax",
            "type": "t_uint256",
            "src": "CryptoWars.sol:44"
          },
          {
            "contract": "CryptoWars",
            "label": "supportFeeRate",
            "type": "t_int128",
            "src": "CryptoWars.sol:45"
          },
          {
            "contract": "CryptoWars",
            "label": "staminaCostFight",
            "type": "t_uint8",
            "src": "CryptoWars.sol:116"
          },
          {
            "contract": "CryptoWars",
            "label": "mintCharacterFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:119"
          },
          {
            "contract": "CryptoWars",
            "label": "refillStaminaFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:122"
          },
          {
            "contract": "CryptoWars",
            "label": "fightRewardBaseline",
            "type": "t_int128",
            "src": "CryptoWars.sol:125"
          },
          {
            "contract": "CryptoWars",
            "label": "mintWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:128"
          },
          {
            "contract": "CryptoWars",
            "label": "reforgeWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:129"
          },
          {
            "contract": "CryptoWars",
            "label": "nonce",
            "type": "t_uint256",
            "src": "CryptoWars.sol:131"
          },
          {
            "contract": "CryptoWars",
            "label": "lastBlockNumberCalled",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:133"
          },
          {
            "contract": "CryptoWars",
            "label": "fightXpGain",
            "type": "t_uint256",
            "src": "CryptoWars.sol:135"
          },
          {
            "contract": "CryptoWars",
            "label": "tokenRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:137"
          },
          {
            "contract": "CryptoWars",
            "label": "xpRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "CryptoWars.sol:138"
          },
          {
            "contract": "CryptoWars",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "CryptoWars.sol:140"
          },
          {
            "contract": "CryptoWars",
            "label": "fightTraitBonus",
            "type": "t_int128",
            "src": "CryptoWars.sol:141"
          },
          {
            "contract": "CryptoWars",
            "label": "inGameOnlyFunds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:143"
          },
          {
            "contract": "CryptoWars",
            "label": "totalInGameOnlyFunds",
            "type": "t_uint256",
            "src": "CryptoWars.sol:144"
          },
          {
            "contract": "CryptoWars",
            "label": "promos",
            "type": "t_contract(Promos)7829",
            "src": "CryptoWars.sol:146"
          },
          {
            "contract": "CryptoWars",
            "label": "_rewardsClaimTaxTimerStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:148"
          },
          {
            "contract": "CryptoWars",
            "label": "stakeFromGameImpl",
            "type": "t_contract(IStakeFromGame)10445",
            "src": "CryptoWars.sol:150"
          },
          {
            "contract": "CryptoWars",
            "label": "durabilityCostFight",
            "type": "t_uint8",
            "src": "CryptoWars.sol:152"
          },
          {
            "contract": "CryptoWars",
            "label": "burnWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:154"
          },
          {
            "contract": "CryptoWars",
            "label": "reforgeWeaponWithDustFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:155"
          },
          {
            "contract": "CryptoWars",
            "label": "BUSDAddress",
            "type": "t_address",
            "src": "CryptoWars.sol:158"
          }
        ],
        "types": {
          "t_contract(Characters)9698": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)18751": {
            "label": "contract Weapons"
          },
          "t_contract(IERC20)25991": {
            "label": "contract IERC20"
          },
          "t_contract(IRandoms)10435": {
            "label": "contract IRandoms"
          },
          "t_contract(IPancakeRouter02)10399": {
            "label": "contract IPancakeRouter02"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)7829": {
            "label": "contract Promos"
          },
          "t_contract(IStakeFromGame)10445": {
            "label": "contract IStakeFromGame"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)20117_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)20117_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)23985_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)23985_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)23720_storage"
              }
            ]
          },
          "t_struct(Set)23720_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "44673a2df82ca40a051b05326ba41da47f2b29f971704ca145e218a74b2847a2": {
      "address": "0x45A9B1EBF62D303b7373d499f7324Aa8bd1C3190",
      "txHash": "0xd787b487fe190bd26068ef14d35ac343f1c8d2fc06ea6f16e1ab0d0b9847c123",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)20117_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "CryptoWars",
            "label": "characters",
            "type": "t_contract(Characters)9698",
            "src": "CryptoWars.sol:39"
          },
          {
            "contract": "CryptoWars",
            "label": "weapons",
            "type": "t_contract(Weapons)18751",
            "src": "CryptoWars.sol:40"
          },
          {
            "contract": "CryptoWars",
            "label": "xBlade",
            "type": "t_contract(IERC20)25991",
            "src": "CryptoWars.sol:41"
          },
          {
            "contract": "CryptoWars",
            "label": "randoms",
            "type": "t_contract(IRandoms)10435",
            "src": "CryptoWars.sol:42"
          },
          {
            "contract": "CryptoWars",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)10399",
            "src": "CryptoWars.sol:43"
          },
          {
            "contract": "CryptoWars",
            "label": "minimumFightTax",
            "type": "t_uint256",
            "src": "CryptoWars.sol:44"
          },
          {
            "contract": "CryptoWars",
            "label": "supportFeeRate",
            "type": "t_int128",
            "src": "CryptoWars.sol:45"
          },
          {
            "contract": "CryptoWars",
            "label": "staminaCostFight",
            "type": "t_uint8",
            "src": "CryptoWars.sol:116"
          },
          {
            "contract": "CryptoWars",
            "label": "mintCharacterFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:119"
          },
          {
            "contract": "CryptoWars",
            "label": "refillStaminaFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:122"
          },
          {
            "contract": "CryptoWars",
            "label": "fightRewardBaseline",
            "type": "t_int128",
            "src": "CryptoWars.sol:125"
          },
          {
            "contract": "CryptoWars",
            "label": "mintWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:128"
          },
          {
            "contract": "CryptoWars",
            "label": "reforgeWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:129"
          },
          {
            "contract": "CryptoWars",
            "label": "nonce",
            "type": "t_uint256",
            "src": "CryptoWars.sol:131"
          },
          {
            "contract": "CryptoWars",
            "label": "lastBlockNumberCalled",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:133"
          },
          {
            "contract": "CryptoWars",
            "label": "fightXpGain",
            "type": "t_uint256",
            "src": "CryptoWars.sol:135"
          },
          {
            "contract": "CryptoWars",
            "label": "tokenRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:137"
          },
          {
            "contract": "CryptoWars",
            "label": "xpRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "CryptoWars.sol:138"
          },
          {
            "contract": "CryptoWars",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "CryptoWars.sol:140"
          },
          {
            "contract": "CryptoWars",
            "label": "fightTraitBonus",
            "type": "t_int128",
            "src": "CryptoWars.sol:141"
          },
          {
            "contract": "CryptoWars",
            "label": "inGameOnlyFunds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:143"
          },
          {
            "contract": "CryptoWars",
            "label": "totalInGameOnlyFunds",
            "type": "t_uint256",
            "src": "CryptoWars.sol:144"
          },
          {
            "contract": "CryptoWars",
            "label": "promos",
            "type": "t_contract(Promos)7829",
            "src": "CryptoWars.sol:146"
          },
          {
            "contract": "CryptoWars",
            "label": "_rewardsClaimTaxTimerStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:148"
          },
          {
            "contract": "CryptoWars",
            "label": "stakeFromGameImpl",
            "type": "t_contract(IStakeFromGame)10445",
            "src": "CryptoWars.sol:150"
          },
          {
            "contract": "CryptoWars",
            "label": "durabilityCostFight",
            "type": "t_uint8",
            "src": "CryptoWars.sol:152"
          },
          {
            "contract": "CryptoWars",
            "label": "burnWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:154"
          },
          {
            "contract": "CryptoWars",
            "label": "reforgeWeaponWithDustFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:155"
          },
          {
            "contract": "CryptoWars",
            "label": "BUSDAddress",
            "type": "t_address",
            "src": "CryptoWars.sol:158"
          }
        ],
        "types": {
          "t_contract(Characters)9698": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)18751": {
            "label": "contract Weapons"
          },
          "t_contract(IERC20)25991": {
            "label": "contract IERC20"
          },
          "t_contract(IRandoms)10435": {
            "label": "contract IRandoms"
          },
          "t_contract(IPancakeRouter02)10399": {
            "label": "contract IPancakeRouter02"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)7829": {
            "label": "contract Promos"
          },
          "t_contract(IStakeFromGame)10445": {
            "label": "contract IStakeFromGame"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)20117_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)20117_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)23985_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)23985_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)23720_storage"
              }
            ]
          },
          "t_struct(Set)23720_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "406392f0fcf5d263ac23bc980bd171a532d059c21e2f5c672051050847eb04eb": {
      "address": "0xCE558a1CC914BF1ceEa217a0C6FD11255F8eC3C1",
      "txHash": "0x31c388a283ce1352479614c44e31f6d57f10a67431b57d27851b644cfaaf0626",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)20117_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "CryptoWars",
            "label": "characters",
            "type": "t_contract(Characters)9698",
            "src": "CryptoWars.sol:39"
          },
          {
            "contract": "CryptoWars",
            "label": "weapons",
            "type": "t_contract(Weapons)18751",
            "src": "CryptoWars.sol:40"
          },
          {
            "contract": "CryptoWars",
            "label": "xBlade",
            "type": "t_contract(IERC20)25991",
            "src": "CryptoWars.sol:41"
          },
          {
            "contract": "CryptoWars",
            "label": "randoms",
            "type": "t_contract(IRandoms)10435",
            "src": "CryptoWars.sol:42"
          },
          {
            "contract": "CryptoWars",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)10399",
            "src": "CryptoWars.sol:43"
          },
          {
            "contract": "CryptoWars",
            "label": "minimumFightTax",
            "type": "t_uint256",
            "src": "CryptoWars.sol:44"
          },
          {
            "contract": "CryptoWars",
            "label": "supportFeeRate",
            "type": "t_int128",
            "src": "CryptoWars.sol:45"
          },
          {
            "contract": "CryptoWars",
            "label": "staminaCostFight",
            "type": "t_uint8",
            "src": "CryptoWars.sol:116"
          },
          {
            "contract": "CryptoWars",
            "label": "mintCharacterFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:119"
          },
          {
            "contract": "CryptoWars",
            "label": "refillStaminaFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:122"
          },
          {
            "contract": "CryptoWars",
            "label": "fightRewardBaseline",
            "type": "t_int128",
            "src": "CryptoWars.sol:125"
          },
          {
            "contract": "CryptoWars",
            "label": "mintWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:128"
          },
          {
            "contract": "CryptoWars",
            "label": "reforgeWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:129"
          },
          {
            "contract": "CryptoWars",
            "label": "nonce",
            "type": "t_uint256",
            "src": "CryptoWars.sol:131"
          },
          {
            "contract": "CryptoWars",
            "label": "lastBlockNumberCalled",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:133"
          },
          {
            "contract": "CryptoWars",
            "label": "fightXpGain",
            "type": "t_uint256",
            "src": "CryptoWars.sol:135"
          },
          {
            "contract": "CryptoWars",
            "label": "tokenRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:137"
          },
          {
            "contract": "CryptoWars",
            "label": "xpRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "CryptoWars.sol:138"
          },
          {
            "contract": "CryptoWars",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "CryptoWars.sol:140"
          },
          {
            "contract": "CryptoWars",
            "label": "fightTraitBonus",
            "type": "t_int128",
            "src": "CryptoWars.sol:141"
          },
          {
            "contract": "CryptoWars",
            "label": "inGameOnlyFunds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:143"
          },
          {
            "contract": "CryptoWars",
            "label": "totalInGameOnlyFunds",
            "type": "t_uint256",
            "src": "CryptoWars.sol:144"
          },
          {
            "contract": "CryptoWars",
            "label": "promos",
            "type": "t_contract(Promos)7829",
            "src": "CryptoWars.sol:146"
          },
          {
            "contract": "CryptoWars",
            "label": "_rewardsClaimTaxTimerStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:148"
          },
          {
            "contract": "CryptoWars",
            "label": "stakeFromGameImpl",
            "type": "t_contract(IStakeFromGame)10445",
            "src": "CryptoWars.sol:150"
          },
          {
            "contract": "CryptoWars",
            "label": "durabilityCostFight",
            "type": "t_uint8",
            "src": "CryptoWars.sol:152"
          },
          {
            "contract": "CryptoWars",
            "label": "burnWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:154"
          },
          {
            "contract": "CryptoWars",
            "label": "reforgeWeaponWithDustFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:155"
          },
          {
            "contract": "CryptoWars",
            "label": "BUSDAddress",
            "type": "t_address",
            "src": "CryptoWars.sol:158"
          }
        ],
        "types": {
          "t_contract(Characters)9698": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)18751": {
            "label": "contract Weapons"
          },
          "t_contract(IERC20)25991": {
            "label": "contract IERC20"
          },
          "t_contract(IRandoms)10435": {
            "label": "contract IRandoms"
          },
          "t_contract(IPancakeRouter02)10399": {
            "label": "contract IPancakeRouter02"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)7829": {
            "label": "contract Promos"
          },
          "t_contract(IStakeFromGame)10445": {
            "label": "contract IStakeFromGame"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)20117_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)20117_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)23985_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)23985_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)23720_storage"
              }
            ]
          },
          "t_struct(Set)23720_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "11869dc0ac2ca57a3c5a15b3fbcce75e0dadc95e47e1980744323c336b0f87e9": {
      "address": "0x3A52d97b31De9bE68C1e2e77D0f5ab3ce99BC2d3",
      "txHash": "0x5ef2d8338bac880e7d476f1d3456c7b90a9230ee6af275e1316515aa21133657",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)20117_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "CryptoWars",
            "label": "characters",
            "type": "t_contract(Characters)9698",
            "src": "CryptoWars.sol:39"
          },
          {
            "contract": "CryptoWars",
            "label": "weapons",
            "type": "t_contract(Weapons)18751",
            "src": "CryptoWars.sol:40"
          },
          {
            "contract": "CryptoWars",
            "label": "xBlade",
            "type": "t_contract(IERC20)25991",
            "src": "CryptoWars.sol:41"
          },
          {
            "contract": "CryptoWars",
            "label": "randoms",
            "type": "t_contract(IRandoms)10435",
            "src": "CryptoWars.sol:42"
          },
          {
            "contract": "CryptoWars",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)10399",
            "src": "CryptoWars.sol:43"
          },
          {
            "contract": "CryptoWars",
            "label": "minimumFightTax",
            "type": "t_uint256",
            "src": "CryptoWars.sol:44"
          },
          {
            "contract": "CryptoWars",
            "label": "supportFeeRate",
            "type": "t_int128",
            "src": "CryptoWars.sol:45"
          },
          {
            "contract": "CryptoWars",
            "label": "staminaCostFight",
            "type": "t_uint8",
            "src": "CryptoWars.sol:116"
          },
          {
            "contract": "CryptoWars",
            "label": "mintCharacterFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:119"
          },
          {
            "contract": "CryptoWars",
            "label": "refillStaminaFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:122"
          },
          {
            "contract": "CryptoWars",
            "label": "fightRewardBaseline",
            "type": "t_int128",
            "src": "CryptoWars.sol:125"
          },
          {
            "contract": "CryptoWars",
            "label": "mintWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:128"
          },
          {
            "contract": "CryptoWars",
            "label": "reforgeWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:129"
          },
          {
            "contract": "CryptoWars",
            "label": "nonce",
            "type": "t_uint256",
            "src": "CryptoWars.sol:131"
          },
          {
            "contract": "CryptoWars",
            "label": "lastBlockNumberCalled",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:133"
          },
          {
            "contract": "CryptoWars",
            "label": "fightXpGain",
            "type": "t_uint256",
            "src": "CryptoWars.sol:135"
          },
          {
            "contract": "CryptoWars",
            "label": "tokenRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:137"
          },
          {
            "contract": "CryptoWars",
            "label": "xpRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "CryptoWars.sol:138"
          },
          {
            "contract": "CryptoWars",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "CryptoWars.sol:140"
          },
          {
            "contract": "CryptoWars",
            "label": "fightTraitBonus",
            "type": "t_int128",
            "src": "CryptoWars.sol:141"
          },
          {
            "contract": "CryptoWars",
            "label": "inGameOnlyFunds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:143"
          },
          {
            "contract": "CryptoWars",
            "label": "totalInGameOnlyFunds",
            "type": "t_uint256",
            "src": "CryptoWars.sol:144"
          },
          {
            "contract": "CryptoWars",
            "label": "promos",
            "type": "t_contract(Promos)7829",
            "src": "CryptoWars.sol:146"
          },
          {
            "contract": "CryptoWars",
            "label": "_rewardsClaimTaxTimerStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:148"
          },
          {
            "contract": "CryptoWars",
            "label": "stakeFromGameImpl",
            "type": "t_contract(IStakeFromGame)10445",
            "src": "CryptoWars.sol:150"
          },
          {
            "contract": "CryptoWars",
            "label": "durabilityCostFight",
            "type": "t_uint8",
            "src": "CryptoWars.sol:152"
          },
          {
            "contract": "CryptoWars",
            "label": "burnWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:154"
          },
          {
            "contract": "CryptoWars",
            "label": "reforgeWeaponWithDustFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:155"
          },
          {
            "contract": "CryptoWars",
            "label": "BUSDAddress",
            "type": "t_address",
            "src": "CryptoWars.sol:158"
          }
        ],
        "types": {
          "t_contract(Characters)9698": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)18751": {
            "label": "contract Weapons"
          },
          "t_contract(IERC20)25991": {
            "label": "contract IERC20"
          },
          "t_contract(IRandoms)10435": {
            "label": "contract IRandoms"
          },
          "t_contract(IPancakeRouter02)10399": {
            "label": "contract IPancakeRouter02"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)7829": {
            "label": "contract Promos"
          },
          "t_contract(IStakeFromGame)10445": {
            "label": "contract IStakeFromGame"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)20117_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)20117_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)23985_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)23985_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)23720_storage"
              }
            ]
          },
          "t_struct(Set)23720_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8f422925f2e827742a56588dd327a3e8dc2a8b022b90c999cccf28729f1139ed": {
      "address": "0x7C17A23880de9EEFae33D91a4Ea4F4D90D1a93ee",
      "txHash": "0x432159f2494185d2090d2dc4a8ea336af1c01b9300dba13ac7e0f8aad088bfcb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)20117_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "CryptoWars",
            "label": "characters",
            "type": "t_contract(Characters)9698",
            "src": "CryptoWars.sol:39"
          },
          {
            "contract": "CryptoWars",
            "label": "weapons",
            "type": "t_contract(Weapons)18751",
            "src": "CryptoWars.sol:40"
          },
          {
            "contract": "CryptoWars",
            "label": "xBlade",
            "type": "t_contract(IERC20)25991",
            "src": "CryptoWars.sol:41"
          },
          {
            "contract": "CryptoWars",
            "label": "randoms",
            "type": "t_contract(IRandoms)10435",
            "src": "CryptoWars.sol:42"
          },
          {
            "contract": "CryptoWars",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)10399",
            "src": "CryptoWars.sol:43"
          },
          {
            "contract": "CryptoWars",
            "label": "minimumFightTax",
            "type": "t_uint256",
            "src": "CryptoWars.sol:44"
          },
          {
            "contract": "CryptoWars",
            "label": "supportFeeRate",
            "type": "t_int128",
            "src": "CryptoWars.sol:45"
          },
          {
            "contract": "CryptoWars",
            "label": "staminaCostFight",
            "type": "t_uint8",
            "src": "CryptoWars.sol:116"
          },
          {
            "contract": "CryptoWars",
            "label": "mintCharacterFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:119"
          },
          {
            "contract": "CryptoWars",
            "label": "refillStaminaFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:122"
          },
          {
            "contract": "CryptoWars",
            "label": "fightRewardBaseline",
            "type": "t_int128",
            "src": "CryptoWars.sol:125"
          },
          {
            "contract": "CryptoWars",
            "label": "mintWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:128"
          },
          {
            "contract": "CryptoWars",
            "label": "reforgeWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:129"
          },
          {
            "contract": "CryptoWars",
            "label": "nonce",
            "type": "t_uint256",
            "src": "CryptoWars.sol:131"
          },
          {
            "contract": "CryptoWars",
            "label": "lastBlockNumberCalled",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:133"
          },
          {
            "contract": "CryptoWars",
            "label": "fightXpGain",
            "type": "t_uint256",
            "src": "CryptoWars.sol:135"
          },
          {
            "contract": "CryptoWars",
            "label": "tokenRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:137"
          },
          {
            "contract": "CryptoWars",
            "label": "xpRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "CryptoWars.sol:138"
          },
          {
            "contract": "CryptoWars",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "CryptoWars.sol:140"
          },
          {
            "contract": "CryptoWars",
            "label": "fightTraitBonus",
            "type": "t_int128",
            "src": "CryptoWars.sol:141"
          },
          {
            "contract": "CryptoWars",
            "label": "inGameOnlyFunds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:143"
          },
          {
            "contract": "CryptoWars",
            "label": "totalInGameOnlyFunds",
            "type": "t_uint256",
            "src": "CryptoWars.sol:144"
          },
          {
            "contract": "CryptoWars",
            "label": "promos",
            "type": "t_contract(Promos)7829",
            "src": "CryptoWars.sol:146"
          },
          {
            "contract": "CryptoWars",
            "label": "_rewardsClaimTaxTimerStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:148"
          },
          {
            "contract": "CryptoWars",
            "label": "stakeFromGameImpl",
            "type": "t_contract(IStakeFromGame)10445",
            "src": "CryptoWars.sol:150"
          },
          {
            "contract": "CryptoWars",
            "label": "durabilityCostFight",
            "type": "t_uint8",
            "src": "CryptoWars.sol:152"
          },
          {
            "contract": "CryptoWars",
            "label": "burnWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:154"
          },
          {
            "contract": "CryptoWars",
            "label": "reforgeWeaponWithDustFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:155"
          },
          {
            "contract": "CryptoWars",
            "label": "BUSDAddress",
            "type": "t_address",
            "src": "CryptoWars.sol:158"
          }
        ],
        "types": {
          "t_contract(Characters)9698": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)18751": {
            "label": "contract Weapons"
          },
          "t_contract(IERC20)25991": {
            "label": "contract IERC20"
          },
          "t_contract(IRandoms)10435": {
            "label": "contract IRandoms"
          },
          "t_contract(IPancakeRouter02)10399": {
            "label": "contract IPancakeRouter02"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)7829": {
            "label": "contract Promos"
          },
          "t_contract(IStakeFromGame)10445": {
            "label": "contract IStakeFromGame"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)20117_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)20117_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)23985_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)23985_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)23720_storage"
              }
            ]
          },
          "t_struct(Set)23720_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6c7af8fd9ccc24c12bd31312d69cde0d99c22cdf4eac4275ecdaa5b7cd88309b": {
      "address": "0x7C5227712b8EbDC10FDD8fa8B3cb954dB84EeA1E",
      "txHash": "0x77774f4c92797e4b101f3c78643b1125e26f77f1836f4121baa0abd11e620835",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)20117_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "CryptoWars",
            "label": "characters",
            "type": "t_contract(Characters)9698",
            "src": "CryptoWars.sol:39"
          },
          {
            "contract": "CryptoWars",
            "label": "weapons",
            "type": "t_contract(Weapons)18751",
            "src": "CryptoWars.sol:40"
          },
          {
            "contract": "CryptoWars",
            "label": "xBlade",
            "type": "t_contract(IERC20)25991",
            "src": "CryptoWars.sol:41"
          },
          {
            "contract": "CryptoWars",
            "label": "randoms",
            "type": "t_contract(IRandoms)10435",
            "src": "CryptoWars.sol:42"
          },
          {
            "contract": "CryptoWars",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)10399",
            "src": "CryptoWars.sol:43"
          },
          {
            "contract": "CryptoWars",
            "label": "minimumFightTax",
            "type": "t_uint256",
            "src": "CryptoWars.sol:44"
          },
          {
            "contract": "CryptoWars",
            "label": "supportFeeRate",
            "type": "t_int128",
            "src": "CryptoWars.sol:45"
          },
          {
            "contract": "CryptoWars",
            "label": "staminaCostFight",
            "type": "t_uint8",
            "src": "CryptoWars.sol:116"
          },
          {
            "contract": "CryptoWars",
            "label": "mintCharacterFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:119"
          },
          {
            "contract": "CryptoWars",
            "label": "refillStaminaFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:122"
          },
          {
            "contract": "CryptoWars",
            "label": "fightRewardBaseline",
            "type": "t_int128",
            "src": "CryptoWars.sol:125"
          },
          {
            "contract": "CryptoWars",
            "label": "mintWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:128"
          },
          {
            "contract": "CryptoWars",
            "label": "reforgeWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:129"
          },
          {
            "contract": "CryptoWars",
            "label": "nonce",
            "type": "t_uint256",
            "src": "CryptoWars.sol:131"
          },
          {
            "contract": "CryptoWars",
            "label": "lastBlockNumberCalled",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:133"
          },
          {
            "contract": "CryptoWars",
            "label": "fightXpGain",
            "type": "t_uint256",
            "src": "CryptoWars.sol:135"
          },
          {
            "contract": "CryptoWars",
            "label": "tokenRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:137"
          },
          {
            "contract": "CryptoWars",
            "label": "xpRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "CryptoWars.sol:138"
          },
          {
            "contract": "CryptoWars",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "CryptoWars.sol:140"
          },
          {
            "contract": "CryptoWars",
            "label": "fightTraitBonus",
            "type": "t_int128",
            "src": "CryptoWars.sol:141"
          },
          {
            "contract": "CryptoWars",
            "label": "inGameOnlyFunds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:143"
          },
          {
            "contract": "CryptoWars",
            "label": "totalInGameOnlyFunds",
            "type": "t_uint256",
            "src": "CryptoWars.sol:144"
          },
          {
            "contract": "CryptoWars",
            "label": "promos",
            "type": "t_contract(Promos)7829",
            "src": "CryptoWars.sol:146"
          },
          {
            "contract": "CryptoWars",
            "label": "_rewardsClaimTaxTimerStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:148"
          },
          {
            "contract": "CryptoWars",
            "label": "stakeFromGameImpl",
            "type": "t_contract(IStakeFromGame)10445",
            "src": "CryptoWars.sol:150"
          },
          {
            "contract": "CryptoWars",
            "label": "durabilityCostFight",
            "type": "t_uint8",
            "src": "CryptoWars.sol:152"
          },
          {
            "contract": "CryptoWars",
            "label": "burnWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:154"
          },
          {
            "contract": "CryptoWars",
            "label": "reforgeWeaponWithDustFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:155"
          },
          {
            "contract": "CryptoWars",
            "label": "BUSDAddress",
            "type": "t_address",
            "src": "CryptoWars.sol:158"
          }
        ],
        "types": {
          "t_contract(Characters)9698": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)18751": {
            "label": "contract Weapons"
          },
          "t_contract(IERC20)25991": {
            "label": "contract IERC20"
          },
          "t_contract(IRandoms)10435": {
            "label": "contract IRandoms"
          },
          "t_contract(IPancakeRouter02)10399": {
            "label": "contract IPancakeRouter02"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)7829": {
            "label": "contract Promos"
          },
          "t_contract(IStakeFromGame)10445": {
            "label": "contract IStakeFromGame"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)20117_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)20117_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)23985_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)23985_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)23720_storage"
              }
            ]
          },
          "t_struct(Set)23720_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6e0a61f02c0fb9c90f82494ffdaa39a85b9e842005d468dc8aed8d0db7c45b1c": {
      "address": "0x495668e97eD005CCf712386e93afe76C4147166A",
      "txHash": "0x64211daf2b4694cd52a7d1031050885411af06b17fc3430559a591d555d96ba5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)20117_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "CryptoWars",
            "label": "characters",
            "type": "t_contract(Characters)9698",
            "src": "CryptoWars.sol:39"
          },
          {
            "contract": "CryptoWars",
            "label": "weapons",
            "type": "t_contract(Weapons)18751",
            "src": "CryptoWars.sol:40"
          },
          {
            "contract": "CryptoWars",
            "label": "xBlade",
            "type": "t_contract(IERC20)25991",
            "src": "CryptoWars.sol:41"
          },
          {
            "contract": "CryptoWars",
            "label": "randoms",
            "type": "t_contract(IRandoms)10435",
            "src": "CryptoWars.sol:42"
          },
          {
            "contract": "CryptoWars",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)10399",
            "src": "CryptoWars.sol:43"
          },
          {
            "contract": "CryptoWars",
            "label": "minimumFightTax",
            "type": "t_uint256",
            "src": "CryptoWars.sol:44"
          },
          {
            "contract": "CryptoWars",
            "label": "supportFeeRate",
            "type": "t_int128",
            "src": "CryptoWars.sol:45"
          },
          {
            "contract": "CryptoWars",
            "label": "staminaCostFight",
            "type": "t_uint8",
            "src": "CryptoWars.sol:116"
          },
          {
            "contract": "CryptoWars",
            "label": "mintCharacterFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:119"
          },
          {
            "contract": "CryptoWars",
            "label": "refillStaminaFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:122"
          },
          {
            "contract": "CryptoWars",
            "label": "fightRewardBaseline",
            "type": "t_int128",
            "src": "CryptoWars.sol:125"
          },
          {
            "contract": "CryptoWars",
            "label": "mintWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:128"
          },
          {
            "contract": "CryptoWars",
            "label": "reforgeWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:129"
          },
          {
            "contract": "CryptoWars",
            "label": "nonce",
            "type": "t_uint256",
            "src": "CryptoWars.sol:131"
          },
          {
            "contract": "CryptoWars",
            "label": "lastBlockNumberCalled",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:133"
          },
          {
            "contract": "CryptoWars",
            "label": "fightXpGain",
            "type": "t_uint256",
            "src": "CryptoWars.sol:135"
          },
          {
            "contract": "CryptoWars",
            "label": "tokenRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:137"
          },
          {
            "contract": "CryptoWars",
            "label": "xpRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "CryptoWars.sol:138"
          },
          {
            "contract": "CryptoWars",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "CryptoWars.sol:140"
          },
          {
            "contract": "CryptoWars",
            "label": "fightTraitBonus",
            "type": "t_int128",
            "src": "CryptoWars.sol:141"
          },
          {
            "contract": "CryptoWars",
            "label": "inGameOnlyFunds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:143"
          },
          {
            "contract": "CryptoWars",
            "label": "totalInGameOnlyFunds",
            "type": "t_uint256",
            "src": "CryptoWars.sol:144"
          },
          {
            "contract": "CryptoWars",
            "label": "promos",
            "type": "t_contract(Promos)7829",
            "src": "CryptoWars.sol:146"
          },
          {
            "contract": "CryptoWars",
            "label": "_rewardsClaimTaxTimerStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:148"
          },
          {
            "contract": "CryptoWars",
            "label": "stakeFromGameImpl",
            "type": "t_contract(IStakeFromGame)10445",
            "src": "CryptoWars.sol:150"
          },
          {
            "contract": "CryptoWars",
            "label": "durabilityCostFight",
            "type": "t_uint8",
            "src": "CryptoWars.sol:152"
          },
          {
            "contract": "CryptoWars",
            "label": "burnWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:154"
          },
          {
            "contract": "CryptoWars",
            "label": "reforgeWeaponWithDustFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:155"
          },
          {
            "contract": "CryptoWars",
            "label": "BUSDAddress",
            "type": "t_address",
            "src": "CryptoWars.sol:158"
          }
        ],
        "types": {
          "t_contract(Characters)9698": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)18751": {
            "label": "contract Weapons"
          },
          "t_contract(IERC20)25991": {
            "label": "contract IERC20"
          },
          "t_contract(IRandoms)10435": {
            "label": "contract IRandoms"
          },
          "t_contract(IPancakeRouter02)10399": {
            "label": "contract IPancakeRouter02"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)7829": {
            "label": "contract Promos"
          },
          "t_contract(IStakeFromGame)10445": {
            "label": "contract IStakeFromGame"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)20117_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)20117_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)23985_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)23985_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)23720_storage"
              }
            ]
          },
          "t_struct(Set)23720_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e3e391409e380a1300a9cd5edea2fe06021747e3c47182e7a84bdc2d92b43007": {
      "address": "0x892ed16ACc638E395bbAF647401B392f27945819",
      "txHash": "0x3939443f2a0fb6eef95aec2e2ba7224e13c3dd268b40119b4b833cfd0439656f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "MultiAccessUpgradeable",
            "label": "access",
            "type": "t_mapping(t_address,t_bool)",
            "src": "multiAccessUpgradeable.sol:8"
          },
          {
            "contract": "Raid",
            "label": "completed",
            "type": "t_bool",
            "src": "raid.sol:15"
          },
          {
            "contract": "Raid",
            "label": "expectedFinishTime",
            "type": "t_uint256",
            "src": "raid.sol:16"
          },
          {
            "contract": "Raid",
            "label": "game",
            "type": "t_contract(CryptoWars)5066",
            "src": "raid.sol:18"
          },
          {
            "contract": "Raid",
            "label": "characters",
            "type": "t_contract(Characters)9698",
            "src": "raid.sol:19"
          },
          {
            "contract": "Raid",
            "label": "weapons",
            "type": "t_contract(Weapons)18751",
            "src": "raid.sol:20"
          },
          {
            "contract": "Raid",
            "label": "raiders",
            "type": "t_array(t_struct(Raider)10898_storage)dyn_storage",
            "src": "raid.sol:28"
          },
          {
            "contract": "Raid",
            "label": "participation",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "raid.sol:29"
          },
          {
            "contract": "RaidBasic",
            "label": "staminaDrain",
            "type": "t_uint64",
            "src": "raidBasic.sol:12"
          },
          {
            "contract": "RaidBasic",
            "label": "weaponDrops",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "raidBasic.sol:13"
          },
          {
            "contract": "RaidBasic",
            "label": "bounty",
            "type": "t_uint256",
            "src": "raidBasic.sol:14"
          },
          {
            "contract": "RaidBasic",
            "label": "bossTrait",
            "type": "t_uint8",
            "src": "raidBasic.sol:15"
          },
          {
            "contract": "RaidBasic",
            "label": "totalPower",
            "type": "t_uint256",
            "src": "raidBasic.sol:17"
          }
        ],
        "types": {
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(CryptoWars)5066": {
            "label": "contract CryptoWars"
          },
          "t_contract(Characters)9698": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)18751": {
            "label": "contract Weapons"
          },
          "t_array(t_struct(Raider)10898_storage)dyn_storage": {
            "label": "struct Raid.Raider[]"
          },
          "t_struct(Raider)10898_storage": {
            "label": "struct Raid.Raider",
            "members": [
              {
                "label": "owner",
                "type": "t_uint256"
              },
              {
                "label": "charID",
                "type": "t_uint256"
              },
              {
                "label": "wepID",
                "type": "t_uint256"
              },
              {
                "label": "power",
                "type": "t_uint24"
              }
            ]
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "d108511f154bdad18bc623b9c5450a6523d7466ff98beebc194eaed8ea585695": {
      "address": "0xaE6Cb700727F513625952959FEC5936c19b83449",
      "txHash": "0x2514e4565cff0a283263cc2ee331016a10d4c50efe51061059ff7b38a7b64fe1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)20126_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "CryptoWars",
            "label": "characters",
            "type": "t_contract(Characters)9707",
            "src": "CryptoWars.sol:40"
          },
          {
            "contract": "CryptoWars",
            "label": "weapons",
            "type": "t_contract(Weapons)18760",
            "src": "CryptoWars.sol:41"
          },
          {
            "contract": "CryptoWars",
            "label": "xBlade",
            "type": "t_contract(IERC20)26000",
            "src": "CryptoWars.sol:42"
          },
          {
            "contract": "CryptoWars",
            "label": "randoms",
            "type": "t_contract(IRandoms)10444",
            "src": "CryptoWars.sol:43"
          },
          {
            "contract": "CryptoWars",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)10408",
            "src": "CryptoWars.sol:44"
          },
          {
            "contract": "CryptoWars",
            "label": "minimumFightTax",
            "type": "t_uint256",
            "src": "CryptoWars.sol:45"
          },
          {
            "contract": "CryptoWars",
            "label": "supportFeeRate",
            "type": "t_uint8",
            "src": "CryptoWars.sol:46"
          },
          {
            "contract": "CryptoWars",
            "label": "staminaCostFight",
            "type": "t_uint8",
            "src": "CryptoWars.sol:122"
          },
          {
            "contract": "CryptoWars",
            "label": "mintCharacterFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:125"
          },
          {
            "contract": "CryptoWars",
            "label": "fightRewardBaseline",
            "type": "t_int128",
            "src": "CryptoWars.sol:131"
          },
          {
            "contract": "CryptoWars",
            "label": "mintWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:134"
          },
          {
            "contract": "CryptoWars",
            "label": "reforgeWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:135"
          },
          {
            "contract": "CryptoWars",
            "label": "lastBlockNumberCalled",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:138"
          },
          {
            "contract": "CryptoWars",
            "label": "fightXpGain",
            "type": "t_uint256",
            "src": "CryptoWars.sol:140"
          },
          {
            "contract": "CryptoWars",
            "label": "tokenRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:142"
          },
          {
            "contract": "CryptoWars",
            "label": "xpRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "CryptoWars.sol:143"
          },
          {
            "contract": "CryptoWars",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "CryptoWars.sol:145"
          },
          {
            "contract": "CryptoWars",
            "label": "fightTraitBonus",
            "type": "t_int128",
            "src": "CryptoWars.sol:146"
          },
          {
            "contract": "CryptoWars",
            "label": "inGameOnlyFunds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:148"
          },
          {
            "contract": "CryptoWars",
            "label": "totalInGameOnlyFunds",
            "type": "t_uint256",
            "src": "CryptoWars.sol:149"
          },
          {
            "contract": "CryptoWars",
            "label": "promos",
            "type": "t_contract(Promos)7838",
            "src": "CryptoWars.sol:151"
          },
          {
            "contract": "CryptoWars",
            "label": "_rewardsClaimTaxTimerStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:153"
          },
          {
            "contract": "CryptoWars",
            "label": "stakeFromGameImpl",
            "type": "t_contract(IStakeFromGame)10454",
            "src": "CryptoWars.sol:155"
          },
          {
            "contract": "CryptoWars",
            "label": "durabilityCostFight",
            "type": "t_uint8",
            "src": "CryptoWars.sol:157"
          },
          {
            "contract": "CryptoWars",
            "label": "burnWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:159"
          },
          {
            "contract": "CryptoWars",
            "label": "reforgeWeaponWithDustFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:160"
          },
          {
            "contract": "CryptoWars",
            "label": "blacksmith",
            "type": "t_contract(Blacksmith)853",
            "src": "CryptoWars.sol:162"
          },
          {
            "contract": "CryptoWars",
            "label": "BUSDAddress",
            "type": "t_address",
            "src": "CryptoWars.sol:163"
          }
        ],
        "types": {
          "t_contract(Characters)9707": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)18760": {
            "label": "contract Weapons"
          },
          "t_contract(IERC20)26000": {
            "label": "contract IERC20"
          },
          "t_contract(IRandoms)10444": {
            "label": "contract IRandoms"
          },
          "t_contract(IPancakeRouter02)10408": {
            "label": "contract IPancakeRouter02"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)7838": {
            "label": "contract Promos"
          },
          "t_contract(IStakeFromGame)10454": {
            "label": "contract IStakeFromGame"
          },
          "t_contract(Blacksmith)853": {
            "label": "contract Blacksmith"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)20126_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)20126_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)23994_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)23994_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)23729_storage"
              }
            ]
          },
          "t_struct(Set)23729_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f6b5f71d90b0a61b6a5b25166adf434e91b90af508a818eb2487fc597e1f0cc9": {
      "address": "0xC671171bed5f93026d666a7BfB953B43929E46B3",
      "txHash": "0x3ce859c9d4a38637eff68c34c812f9422764d14cfdaa43edd3f0e91805e8420a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)20134_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "CryptoWars",
            "label": "characters",
            "type": "t_contract(Characters)9711",
            "src": "CryptoWars.sol:40"
          },
          {
            "contract": "CryptoWars",
            "label": "weapons",
            "type": "t_contract(Weapons)18768",
            "src": "CryptoWars.sol:41"
          },
          {
            "contract": "CryptoWars",
            "label": "xBlade",
            "type": "t_contract(IERC20)26008",
            "src": "CryptoWars.sol:42"
          },
          {
            "contract": "CryptoWars",
            "label": "randoms",
            "type": "t_contract(IRandoms)10448",
            "src": "CryptoWars.sol:43"
          },
          {
            "contract": "CryptoWars",
            "label": "pancakeRouter",
            "type": "t_contract(IPancakeRouter02)10412",
            "src": "CryptoWars.sol:44"
          },
          {
            "contract": "CryptoWars",
            "label": "minimumFightTax",
            "type": "t_uint256",
            "src": "CryptoWars.sol:45"
          },
          {
            "contract": "CryptoWars",
            "label": "supportFeeRate",
            "type": "t_uint8",
            "src": "CryptoWars.sol:46"
          },
          {
            "contract": "CryptoWars",
            "label": "staminaCostFight",
            "type": "t_uint8",
            "src": "CryptoWars.sol:122"
          },
          {
            "contract": "CryptoWars",
            "label": "mintCharacterFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:125"
          },
          {
            "contract": "CryptoWars",
            "label": "fightRewardBaseline",
            "type": "t_int128",
            "src": "CryptoWars.sol:131"
          },
          {
            "contract": "CryptoWars",
            "label": "mintWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:134"
          },
          {
            "contract": "CryptoWars",
            "label": "reforgeWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:135"
          },
          {
            "contract": "CryptoWars",
            "label": "lastBlockNumberCalled",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:138"
          },
          {
            "contract": "CryptoWars",
            "label": "fightXpGain",
            "type": "t_uint256",
            "src": "CryptoWars.sol:140"
          },
          {
            "contract": "CryptoWars",
            "label": "tokenRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:142"
          },
          {
            "contract": "CryptoWars",
            "label": "xpRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "CryptoWars.sol:143"
          },
          {
            "contract": "CryptoWars",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "CryptoWars.sol:145"
          },
          {
            "contract": "CryptoWars",
            "label": "fightTraitBonus",
            "type": "t_int128",
            "src": "CryptoWars.sol:146"
          },
          {
            "contract": "CryptoWars",
            "label": "inGameOnlyFunds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:148"
          },
          {
            "contract": "CryptoWars",
            "label": "totalInGameOnlyFunds",
            "type": "t_uint256",
            "src": "CryptoWars.sol:149"
          },
          {
            "contract": "CryptoWars",
            "label": "promos",
            "type": "t_contract(Promos)7842",
            "src": "CryptoWars.sol:151"
          },
          {
            "contract": "CryptoWars",
            "label": "_rewardsClaimTaxTimerStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "CryptoWars.sol:153"
          },
          {
            "contract": "CryptoWars",
            "label": "stakeFromGameImpl",
            "type": "t_contract(IStakeFromGame)10458",
            "src": "CryptoWars.sol:155"
          },
          {
            "contract": "CryptoWars",
            "label": "durabilityCostFight",
            "type": "t_uint8",
            "src": "CryptoWars.sol:157"
          },
          {
            "contract": "CryptoWars",
            "label": "burnWeaponFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:159"
          },
          {
            "contract": "CryptoWars",
            "label": "reforgeWeaponWithDustFee",
            "type": "t_int128",
            "src": "CryptoWars.sol:160"
          },
          {
            "contract": "CryptoWars",
            "label": "blacksmith",
            "type": "t_contract(Blacksmith)853",
            "src": "CryptoWars.sol:162"
          },
          {
            "contract": "CryptoWars",
            "label": "BUSDAddress",
            "type": "t_address",
            "src": "CryptoWars.sol:163"
          }
        ],
        "types": {
          "t_contract(Characters)9711": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)18768": {
            "label": "contract Weapons"
          },
          "t_contract(IERC20)26008": {
            "label": "contract IERC20"
          },
          "t_contract(IRandoms)10448": {
            "label": "contract IRandoms"
          },
          "t_contract(IPancakeRouter02)10412": {
            "label": "contract IPancakeRouter02"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)7842": {
            "label": "contract Promos"
          },
          "t_contract(IStakeFromGame)10458": {
            "label": "contract IStakeFromGame"
          },
          "t_contract(Blacksmith)853": {
            "label": "contract Blacksmith"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)20134_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)20134_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)24002_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)24002_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)23737_storage"
              }
            ]
          },
          "t_struct(Set)23737_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
