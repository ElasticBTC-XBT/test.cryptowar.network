{
  "root": true,
  "env": {
    "node": true
  },
  "extends": ["plugin:vue/essential", "eslint:recommended", "@vue/typescript"],
  "plugins": ["prettier"],
  "parserOptions": {
    "project": ["tsconfig.json"],
    "parser": "@typescript-eslint/parser"
  },
  "rules": {
    "prettier/prettier": "error",
    "no-multiple-empty-lines": "off",
    "eqeqeq": "error",
    "max-len": [
      "error",
      {
        "ignorePattern": "//",
        "code": 180
      }
    ],
    "no-debugger": "error",
    "no-eval": "error",
    "no-fallthrough": "error",
    "new-parens": "error",
    "no-caller": "error",
    "no-cond-assign": "error",
    "no-throw-literal": "error",
    "no-trailing-spaces": "error",
    "no-undef-init": "error",
    "no-unsafe-finally": "error",
    "no-unused-labels": "error",
    "no-var": "error",
    "object-shorthand": "error",
    "prefer-const": "error",
    "radix": "error",
    "use-isnan": "error",
    "quote-props": ["error", "as-needed"],
    "semi": "off",
    "indent": "off",
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/no-use-before-define": "error",
    "@typescript-eslint/ban-types": [
      "error",
      {
        "types": {
          "Object": {
            "message": "Avoid using the `Object` type. Did you mean `object`?"
          },
          "Function": {
            "message": "Avoid using the `Function` type. Prefer a specific function type, like `() => void`."
          },
          "Boolean": {
            "message": "Avoid using the `Boolean` type. Did you mean `boolean`?"
          },
          "Number": {
            "message": "Avoid using the `Number` type. Did you mean `number`?"
          },
          "String": {
            "message": "Avoid using the `String` type. Did you mean `string`?"
          },
          "Symbol": {
            "message": "Avoid using the `Symbol` type. Did you mean `symbol`?"
          }
        }
      }
    ],
    "@typescript-eslint/type-annotation-spacing": "error",
    "@typescript-eslint/unified-signatures": "error",
    "@typescript-eslint/consistent-type-assertions": "error",
    "@typescript-eslint/consistent-type-definitions": "error",
    "@typescript-eslint/dot-notation": "error",
    "@typescript-eslint/no-empty-interface": "error",
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-namespace": "error",
    "@typescript-eslint/no-unused-expressions": "error",
    "@typescript-eslint/indent": [
      "error",
      2,
      {
        "SwitchCase": 1,
        "FunctionDeclaration": {
          "parameters": "first"
        },
        "FunctionExpression": {
          "parameters": "first"
        },
        "ArrayExpression": 1,
        "MemberExpression": 4,
        "ignoredNodes": ["ConditionalExpression"]
      }
    ],
    "@typescript-eslint/semi": 0
  }
}
